<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cooper.blog.dao.ArticleCommentMapper" >
  <resultMap id="BaseResultMap" type="cn.cooper.blog.entity.ArticleComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="article_id" property="articleId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="blog_url" property="blogUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="father_comm" property="fatherComm" jdbcType="INTEGER" />
    <result column="be_feedback" property="beFeedback" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.cooper.blog.entity.ArticleComment" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, user_name, blog_url, create_time, email, father_comm, be_feedback
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_article_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_article_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cooper.blog.entity.ArticleComment" >
    insert into tb_article_comment (id, article_id, user_name, 
      blog_url, create_time, email, 
      father_comm, be_feedback, content
      )
    values (#{id,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{blogUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{fatherComm,jdbcType=INTEGER}, #{beFeedback,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.cooper.blog.entity.ArticleComment" >
    insert into tb_article_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="blogUrl != null" >
        blog_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="fatherComm != null" >
        father_comm,
      </if>
      <if test="beFeedback != null" >
        be_feedback,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="blogUrl != null" >
        #{blogUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="fatherComm != null" >
        #{fatherComm,jdbcType=INTEGER},
      </if>
      <if test="beFeedback != null" >
        #{beFeedback,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cooper.blog.entity.ArticleComment" >
    update tb_article_comment
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="blogUrl != null" >
        blog_url = #{blogUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="fatherComm != null" >
        father_comm = #{fatherComm,jdbcType=INTEGER},
      </if>
      <if test="beFeedback != null" >
        be_feedback = #{beFeedback,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.cooper.blog.entity.ArticleComment" >
    update tb_article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      blog_url = #{blogUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      father_comm = #{fatherComm,jdbcType=INTEGER},
      be_feedback = #{beFeedback,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cooper.blog.entity.ArticleComment" >
    update tb_article_comment
    set article_id = #{articleId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      blog_url = #{blogUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      father_comm = #{fatherComm,jdbcType=INTEGER},
      be_feedback = #{beFeedback,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>